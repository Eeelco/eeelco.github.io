<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cpp on Eelco</title>
    <link>https://www.eelco.de/tags/cpp/</link>
    <description>Recent content in Cpp on Eelco</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Feb 2025 09:57:17 +0100</lastBuildDate>
    <atom:link href="https://www.eelco.de/tags/cpp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Avoiding dynamic memory allocation when throwing standard library exceptions</title>
      <link>https://www.eelco.de/posts/static-exceptions/</link>
      <pubDate>Sun, 02 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://www.eelco.de/posts/static-exceptions/</guid>
      <description>&lt;p&gt;Many C++ use-cases don&amp;rsquo;t allow for heap allocation after some startup phase. This means&#xA;that for those use-cases exceptions are off the table, since typical implementations&#xA;will always lead to heap allocation when an exception is thrown. I tried to come up&#xA;with a small library that solves this problem, but this is not more than a proof of concept.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For the rest of this post, GCC and libstdc++ are assumed.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
